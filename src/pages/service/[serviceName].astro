---
export function getStaticPaths() {
  return [
    {
      params: {
        serviceName: 'storage',
      },
    },
    {
      params: {
        serviceName: 'logistics',
      },
    },
    {
      params: {
        serviceName: 'warehousing',
      },
    },
    {
      params: {
        serviceName: 'cargo',
      },
    },
    {
      params: {
        serviceName: 'trucking',
      },
    },
    {
      params: {
        serviceName: 'packaging',
      },
    },
  ];
}
import { Image } from 'astro:assets';

const { serviceName } = Astro.params;
import Layout from '~/layouts/Layout.astro';
import Breadcrumb from '~/components/Breadcrumb.astro';
import RequestCallBack from '~/components/RequestCallBack.astro';

import { type Service, servicesInfo } from '~/assets/data';

const selectedService: Service | undefined = servicesInfo.find(
  (service) => service.name === serviceName
);

if (!selectedService) return Astro.redirect('/404');

const servicesNav: {
  link: string;
  name: string;
}[] = servicesInfo.map((service) => ({
  link: `/service/${service.name}`,
  name: service.name,
}));

export const prerender = true;
---

<Layout title={`${serviceName} Service - Mugafrey Investment`}>
  <Breadcrumb
    title={`${serviceName} Service`}
    info={selectedService?.subtitle}
  />
  <section class='wrapper py-20 flex flex-wrap items-start justify-center'>
    <div class='services-nav px-3 mt-6 lg:w-1/3 lg:sticky lg:top-20'>
      <div class='services-list border border-[#c2cbdf] mb-5 py-2.5 px-[30px]'>
        {
          servicesNav.map(({ link, name }) => (
            <a
              href={link}
              class={`anchorTag block leading-[1] py-2 pl-4 border-l-2 border-[#c2cbdf] my-5 transition-all duration-300`}
            >
              {name}
            </a>
          ))
        }
      </div>
      <h4 class='text-xl mb-2'>Enim qui eos rerum in delectus</h4>
      <p>
        Nam voluptatem quasi numquam quas fugiat ex temporibus quo est. Quia aut
        quam quod facere ut non occaecati ut aut. Nesciunt mollitia illum
        tempore corrupti sed eum reiciendis. Maxime modi rerum.
      </p>
    </div>
    <div class='service-info px-3 mt-6 lg:w-2/3'>
      {
        selectedService === undefined ? (
          <div />
        ) : (
          <div class='service'>
            <div class='service-img reltive flex items-center justify-center'>
              <Image
                class='w-full max-w-[800px] mb-5'
                src={selectedService.image}
                alt={'Service image'}
              />
            </div>
            <h3 class='text-2xl'>{selectedService.subtitle}</h3>
            <p class='my-4'>{selectedService.description}</p>
            {selectedService.offers.length <= 0 ? (
              <div />
            ) : (
              <ul class='mb-5'>
                {selectedService.offers.map((offer) => (
                  <li class='flex items-start mb-2.5 last:mb-0'>
                    <span class='mr-2 w-7 h-7 flex items-center justify-center rounded-full border border-[var(--light-green-color)]'>
                      &checkmark;
                    </span>

                    {offer}
                  </li>
                ))}
              </ul>
            )}
            {selectedService.offers.length <= 0 ? (
              <div />
            ) : (
              <div>
                {selectedService.otherInfo.map((info) => (
                  <p class='mb-3 last:mb-0'>{info}</p>
                ))}
              </div>
            )}
          </div>
        )
      }
    </div>
  </section>
  <RequestCallBack />
</Layout>

<script>
  const anchorTagElemets = document.querySelectorAll(
    '.anchorTag'
  ) as NodeListOf<HTMLAnchorElement>;

  let pathName = window.location.pathname.split('/')[2];

  for (let i = 0; i < anchorTagElemets.length; i++) {
    const anchorTag = anchorTagElemets[i];
    const href = anchorTag.href.split('/')[4];

    if (href === pathName) {
      anchorTag.classList.add('active');
    } else {
      anchorTag.classList.remove('active');
    }
  }
</script>

<style>
  a.active {
    color: var(--light-green-color);
    border-left-color: var(--light-green-color);
    font-weight: bold;
  }
</style>
